# load("@pip//:requirements.bzl", "entry_point")
# alias(
#   name = "menuconfig",
#   actual = entry_point("menuconfig"),
# )

# genrule(
#   name = "config",
#   srcs = [":Kconfig"],
#   outs = [".config"],
#   cmd = "KCONFIG_CONFIG=\"$@\" menuconfig $(SRCS)",
#   visibility = ["//visibility:public"],
# )

load("@bazel_skylib//rules:common_settings.bzl", "bool_flag", "int_flag")
load(":feature_cc_library.bzl", "feature_cc_library")

bool_flag(name = "CONFIG_FEATURE1", build_setting_default=False)
bool_flag(name = "CONFIG_FEATURE2", build_setting_default=False)
int_flag(name = "CONFIG_INT_VALUE", build_setting_default=0)

feature_cc_library(
  name = "int_value_cc",
  flag = ":CONFIG_INT_VALUE",
)
feature_cc_library(
  name = "feature1_cc",
  flag = ":CONFIG_FEATURE1",
)
feature_cc_library(
  name = "feature2_cc",
  flag = ":CONFIG_FEATURE2",
)

config_setting(
  name = "CONFIG_FEATURE1=true",
  flag_values = {
    ":CONFIG_FEATURE1": "true",
  },
)
config_setting(
  name = "CONFIG_FEATURE2=true",
  flag_values = {
    ":CONFIG_FEATURE2": "true",
  },
)

cc_binary(
    name = "app",
    srcs = [
      "src/main.cc",
      "include/myfeatures.h",
    ] + select({
      "//conditions:default": [],
      ":CONFIG_FEATURE1=true": ["src/feature1.cc"],
    }) + select({
      "//conditions:default": [],
      ":CONFIG_FEATURE2=true": ["src/feature2.cc"],
    }),
    deps = [
      ":int_value_cc",
      ":feature1_cc",
      ":feature2_cc",
    ],
    includes = ["include"],
)

platform(
  name = "prj1",
  parents = ["@platforms//host"],
  flags = [
    "--//:CONFIG_FEATURE1=true",
    "--//:CONFIG_FEATURE2=true",
    "--//:CONFIG_INT_VALUE=5",
  ]
)

platform(
  name = "prj2",
  parents = ["@platforms//host"],
  flags = [
    "--//:CONFIG_FEATURE1=true",
    "--//:CONFIG_INT_VALUE=15",
  ]
)
